<?xml version="1.0"?>
<project name="dams" default="compile" basedir=".">
  <property name="appName" value="dams"/>
  <property file="${user.home}/build.properties"/>
  <property file="${basedir}/build.properties"/>
  <property name="src"       value="${basedir}/src"/>
  <property name="java"      value="${src}/java"/>
  <property name="sh"        value="${src}/sh"/>
  <property name="lib"       value="${src}/lib"/>
  <property name="lib2"      value="${src}/lib2"/>
  <property name="root"      value="${src}/root"/>
  <property name="metainf"   value="${src}/metainf"/>
  <property name="props"     value="${src}/properties"/>
  <property name="webinf"    value="${src}/webinf"/>
  <property name="xsl"       value="${src}/xsl"/>
  <property name="tmp"       value="${basedir}/tmp"/>
  <property name="webapp"    value="${tmp}/webapp"/>
  <property name="dist"      value="${basedir}/dist"/>

  <tstamp>
    <format property="build.timestamp" pattern="yyyy-MM-dd'T'HH:mm:ssZ"/>
  </tstamp>

  <!-- version numbering -->
  <target name="version">
    <!-- app version from properties files -->
    <property file="${props}/version.properties"/>
    <property name="app.version"
          value="${major.version}.${minor.version}"/>

    <!-- src version from 'git describe' -->
    <exec executable="git" outputproperty="src.version"
        failifexecutionfails="false" errorproperty="">
      <arg value="describe"/>
      <arg value="--all"/>
      <arg value="--always"/>
      <arg value="--long"/>
      <arg value="--abbrev=40"/>
      <arg value="HEAD"/>
    </exec>
    <condition property="src.version" value="${src.version}" else="unknown">
      <and>
        <isset property="git.revision"/>
        <length string="${git.revision}" trim="yes" length="0" when="greater"/>
      </and>
    </condition>

    <!-- filters -->
    <filterset id="version-filters">
      <filter token="app_version"     value="${app.version}"/>
      <filter token="src_version"     value="${src.version}"/>
      <filter token="build_timestamp" value="${build.timestamp}"/>
    </filterset>

    <echo level="info" message="app ver..: ${app.version}"/>
    <echo level="info" message="src ver..: ${src.version}"/>
    <echo level="info" message="timestamp: ${build.timestamp}"/>

  </target>

  <path id="classpath">
    <fileset dir="${lib}" id="lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${lib2}" id="lib2">
      <include name="*.jar"/>
    </fileset>
  </path>

  <!-- remove temp files -->
  <target name="clean" description="Delete generated directories">
    <delete dir="${tmp}"/>
  </target>

  <!-- remove temp and dist files -->
  <target name="distclean" description="Delete WAR files">
    <delete dir="${tmp}"/>
    <delete dir="${dist}"/>
  </target>

  <!-- prepare -->
  <target name="prepare" description="Create output directories.">
    <mkdir dir="${dist}"/>
    <mkdir dir="${tmp}"/>
    <mkdir dir="${webapp}/META-INF"/>
    <mkdir dir="${webapp}/WEB-INF"/>
    <mkdir dir="${webapp}/WEB-INF/lib"/>
    <mkdir dir="${webapp}/WEB-INF/classes"/>
  </target>

  <!-- compile -->
  <target name="compile" description="Compile Java classes."
      depends="prepare,version">
    <!-- compile -->
    <javac destdir="${webapp}/WEB-INF/classes" srcdir="${java}"
        deprecation="on" debug="true" debuglevel="lines,source" target="1.6"
        includeantruntime="false" source="1.6">
      <classpath refid="classpath"/>
      <!-- <compilerarg line="-Xlint:unchecked"/> -->
      <!-- <compilerarg line="-Xlint:all"/> -->
    </javac>

    <!-- setup command-line scripts -->
    <copy todir="${tmp}/commands">
      <fileset dir="${sh}"/>
    </copy>
    <chmod dir="${tmp}/commands" perm="ugo+rx" includes="**/*.sh"/>

    <!-- jars -->
    <copy todir="${tmp}/lib">
      <fileset dir="${lib}"/>
      <fileset dir="${lib2}"/>
    </copy>

    <!-- compiled classes -->
    <copy todir="${tmp}/classes">
      <fileset dir="${webapp}/WEB-INF/classes"/>
    </copy>

    <!-- sample files -->
    <copy todir="${tmp}/sample">
      <fileset dir="${src}/sample"/>
    </copy>

  </target>

  <!-- build webapp -->
  <target name="webapp" description="Build WAR file" depends="compile">
    <!-- move old war file out of the way -->
    <move file="${dist}/${appName}.war" tofile="${dist}/${appName}.bak"
      failonerror="false"/>

    <!-- copy files -->
    <copy todir="${webapp}">
      <fileset dir="${root}" includes="**/*"/>
    </copy>
    <copy todir="${webapp}/WEB-INF/lib">
      <fileset refid="lib"/>
    </copy>
    <copy todir="${webapp}/WEB-INF/classes">
      <fileset dir="${props}" includes="**/*.properties, jhove.conf"/>
    </copy>
    <copy todir="${webapp}/WEB-INF/">
      <fileset dir="${webinf}" excludes="context.xml"/>
      <filterset refid="version-filters"/>
    </copy>
    <copy todir="${webapp}/META-INF/">
      <fileset dir="${webinf}" includes="context.xml"/>
    </copy>

    <!-- generate new war file -->
    <war destfile="${dist}/${appName}.war" webxml="${webapp}/WEB-INF/web.xml">
      <fileset dir="${webapp}">
        <exclude name="WEB-INF/**"/>
        <exclude name="META-INF/**"/>
      </fileset>
      <webinf dir="${webapp}/WEB-INF" excludes="web.xml"/>
      <metainf dir="${webapp}/META-INF"/>
    </war>
  </target>

  <!-- build webapp for jetty -->
  <target name="webapp-jetty" description="Build WAR file for jetty"
      depends="compile">
    <!-- move old war file out of the way -->
    <move file="${dist}/${appName}.war" tofile="${dist}/${appName}.bak"
      failonerror="false"/>

    <!-- copy files -->
    <copy todir="${webapp}">
      <fileset dir="${root}" includes="**/*"/>
    </copy>
    <copy todir="${webapp}/WEB-INF/lib">
      <fileset refid="lib"/>
    </copy>
    <copy todir="${webapp}/WEB-INF/classes">
      <fileset dir="${props}" includes="**/*.properties, jhove.conf"/>
    </copy>
    <copy file="${webinf}/web-jetty.xml" tofile="${webapp}/WEB-INF/web.xml">
      <filterset refid="version-filters"/>
    </copy>

    <!-- generate new war file -->
    <war destfile="${dist}/${appName}.war"
        webxml="${webapp}/WEB-INF/web.xml">
      <fileset dir="${webapp}">
        <exclude name="WEB-INF/**"/>
        <exclude name="META-INF/**"/>
      </fileset>
      <webinf dir="${webapp}/WEB-INF" excludes="web.xml"/>
      <metainf dir="${webapp}/META-INF"/>
    </war>
  </target>

  <!-- deploy stylesheets -->
  <target name="xsl" description="Copy xsl stylesheets to deploy directory">
    <copy todir="${xsl.home}">
      <fileset dir="${xsl}"/>
    </copy>
  </target>

  <!-- deploy webapp -->
  <target name="local-deploy" description="Deploy webapp to local dir"
      depends="xsl">
    <echo level="info" message="war = 'file://${dist}/${appName}.war'"/>
    <copy file="${dist}/${appName}.war" todir="${deploy.home}"/>
  </target>

  <!-- remote deployment -->
  <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"
      classpathref="classpath"/>
  <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"
      classpathref="classpath"/>
  <target name="remote-redeploy"
      description="Undeploy and then redeploy webapp to remote tomcat">
    <antcall target="remote-undeploy"/>
    <waitfor maxwait="1000" maxwaitunit="millisecond">
      <equals arg1="1" arg2="2"/>
    </waitfor>
    <antcall target="remote-deploy"/>
  </target>
  <target name="remote-deploy" description="Deploy webapp to remote tomcat">
    <echo level="info" message="war = 'file://${dist}/${appName}.war'"/>
    <deploy url="http://${manager.host}:8080/manager/text" path="/${appName}"
        username="${manager.user}" password="${manager.pass}"
        war="file://${dist}/${appName}.war"/>
  </target>
  <target name="remote-undeploy" description="Remove webapp from remote tomcat">
    <undeploy url="http://${manager.host}:8080/manager/text" path="/${appName}"
          username="${manager.user}" password="${manager.pass}" failonerror="false"/>
  </target>

  <!-- jetty -->
  <target name="jetty" description="Update scripts and files in jetty"
      depends="webapp">
    <!-- command-line scripts -->
    <copy todir="${jetty.home}/dams/bin">
      <fileset dir="${sh}"/>
    </copy>
    <chmod dir="${jetty.home}/dams/bin" perm="ugo+rx" includes="**/*.sh"/>

    <!-- jars -->
    <copy todir="${jetty.home}/dams/lib">
      <fileset dir="${lib}"/>
      <fileset dir="${lib2}"/>
    </copy>

    <!-- xsl stylesheets -->
    <copy todir="${jetty.home}/dams/xsl">
      <fileset dir="${xsl}"/>
    </copy>

    <!-- compiled classes -->
    <copy todir="${jetty.home}/dams/classes">
      <fileset dir="${webapp}/WEB-INF/classes"/>
    </copy>

    <!-- sample files -->
    <copy todir="${jetty.home}/dams/sample">
      <fileset dir="${src}/sample"/>
    </copy>

    <!-- webapp -->
    <copy file="${dist}/${appName}.war" todir="${jetty.home}/webapps"/>
  </target>
</project>
